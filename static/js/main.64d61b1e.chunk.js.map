{"version":3,"sources":["Record/RecordButton.module.css","App.module.css","Record/RecordButton.js","recorder.js","App.js","reportWebVitals.js","index.js","serviceWorker.js"],"names":["module","exports","RecordButton","props","buttonClasses","classes","button","recording","push","Red","onClick","stopRecording","startRecording","className","join","socket","require","io","audioConstraints","channelCount","sampleRate","count","Rec","state","label","mediaRecorder","start","setState","stop","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","addEventListener","event","emit","name","timecode","file","data","segment","id","gameId","message","sendMessage","this","unity","on","split","newGame","React","Component","unityContent","UnityContent","App","generateUUID","startIndex","Math","round","random","v4","substring","avaliateProduction","toLowerCase","send","increaseId","localStorage","getItem","setItem","header","Unity","centeredDiv","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","window","serviceWorker","register","registration","catch","err"],"mappings":"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","file":"static/js/main.64d61b1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RecordButton_button__IZaY8\",\"Red\":\"RecordButton_Red__22ynq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2EZG_\",\"App-logo\":\"App_App-logo__3Yx17\",\"header\":\"App_header__2Wyi5\",\"p\":\"App_p__1TF4B\",\"Unity\":\"App_Unity__1ss9n\",\"centeredDiv\":\"App_centeredDiv__2KJI6\"};","import classes from \"./RecordButton.module.css\";\r\n\r\nconst RecordButton = (props) => {\r\n  let buttonClasses = [classes.button];\r\n  if (props.recording) buttonClasses.push(classes.Red);\r\n  return (\r\n    <button\r\n      onClick={props.recording ? props.stopRecording : props.startRecording}\r\n      className={buttonClasses.join(\" \")}\r\n    >\r\n      <i className=\"material-icons\">{props.recording ? \"mic_off\" : \"mic\"}</i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RecordButton;\r\n","import React from \"react\";\r\nimport RecordButton from \"./Record/RecordButton\";\r\nconst io = require(\"socket.io-client\");\r\n\r\nconst socket = io(\"http://192.168.1.11:5000\");\r\n// const socket = io(\"ws://192.168.1.10:5000\", {\r\n//   transports: [\"websocket\"],\r\n// });\r\n\r\nconst timeInterval = 250;\r\n\r\nconst audioConstraints = {\r\n  channelCount: 1,\r\n  sampleRate: 44100,\r\n};\r\n\r\nlet count = 0;\r\n\r\nclass Rec extends React.Component {\r\n  state = {\r\n    recording: false,\r\n    label: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ audio: audioConstraints })\r\n      .then((stream) => {\r\n        this.mediaRecorder = new MediaRecorder(stream);\r\n        this.mediaRecorder.addEventListener(\"dataavailable\", (event) => {\r\n          socket.emit(\r\n            \"playsound\",\r\n            {\r\n              name: event.timecode,\r\n              file: event.data,\r\n              segment: count++,\r\n              id: this.props.id,\r\n              label: this.state.label,\r\n              \"gameId\": this.props.gameId,\r\n            },\r\n            (message) => {\r\n              this.props.sendMessage(message);\r\n            }\r\n          );\r\n        });\r\n      });\r\n    this.props.unity.on(\"GameOver\", () => {\r\n      this.stopRecording();\r\n    });\r\n    this.props.unity.on(\"GameStart\", (message) => {\r\n      if (message === \"Menu\") {\r\n        this.stopRecording();\r\n        this.setState({ label: \"\" });\r\n      } else {\r\n        const label = message.split(\"_\")[1];\r\n        this.setState({ label: label });\r\n        this.props.newGame();\r\n        this.stopRecording();\r\n      }\r\n    });\r\n  }\r\n\r\n  startRecording = () => {\r\n    count = 0;\r\n    this.mediaRecorder.start(timeInterval);\r\n    this.setState({ recording: true });\r\n  };\r\n\r\n  stopRecording = () => {\r\n    if (this.mediaRecorder.state !== \"recording\") return;\r\n    this.mediaRecorder.stop();\r\n    this.setState({\r\n      recording: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.label === \"\" || this.state.label === \"Menu\" ? null : (\r\n      <RecordButton\r\n        recording={this.state.recording}\r\n        startRecording={this.startRecording}\r\n        stopRecording={this.stopRecording}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rec;\r\n","import classes from \"./App.module.css\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport Recorder from \"./recorder\";\nimport React, { Component } from \"react\";\nimport { v4 } from \"uuid\";\n\nconst unityContent = new UnityContent(\n  \"Build/game.json\",\n  \"Build/UnityLoader.js\"\n);\n\nclass App extends Component {\n  generateUUID = () => {\n    const startIndex = Math.round(Math.random() * 10);\n    const id = v4().substring(startIndex, startIndex + 6);\n    return id;\n  };\n\n  constructor(props) {\n    super(props);\n    let id = localStorage.getItem(\"id\");\n    if (id === null) {\n      id = this.generateUUID();\n      localStorage.setItem(\"id\", id);\n    }\n    this.state = {\n      id: id,\n      gameId: 0,\n    };\n  }\n\n  avaliateProduction = (message) => {\n    if (message[\"gameId\"] !== this.state.gameId) return;\n    if (message[\"response\"].toLowerCase() === \"true\")\n      unityContent.send(\"Character\", \"moveCharacter\", \"True\");\n  };\n\n  onClick = () => {\n    unityContent.send(\"Character\", \"moveCharacter\", \"True\");\n  };\n\n  increaseId = () => {\n    this.setState({ gameId: this.state.gameId + 1 });\n  };\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <header className={classes.header}>\n          <div className={classes.Unity}>\n            <Unity unityContent={unityContent} />\n          </div>\n          <div className={classes.centeredDiv}>\n            <Recorder\n              sendMessage={this.avaliateProduction}\n              id={this.state.id}\n              unity={unityContent}\n              gameId={this.state.gameId}\n              newGame={this.increaseId}\n            />\n            <p className={classes.p}>{this.state.id}</p>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { registerServiceWorker } from './serviceWorker'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nregisterServiceWorker();\n","export const registerServiceWorker = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\r\n        // Registration was successful\r\n        //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n      }).catch(function (err) {\r\n        // registration failed :(\r\n        //console.log('ServiceWorker registration failed: ', err);\r\n      });\r\n    });\r\n  }\r\n}"],"sourceRoot":""}