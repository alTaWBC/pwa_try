{"version":3,"sources":["Record/RecordButton.module.css","App.module.css","Record/RecordButton.js","recorder.js","App.js","reportWebVitals.js","index.js","serviceWorker.js"],"names":["module","exports","RecordButton","props","buttonClasses","classes","button","recording","push","Red","onClick","stopRecording","startRecording","className","join","audioConstraints","channelCount","sampleRate","count","Rec","state","label","microphonePermission","a","navigator","mediaDevices","getUserMedia","audio","stream","mediaRecorder","MediaRecorder","addEventListener","event","formData","FormData","append","data","fetch","headers","name","timecode","segment","id","gameId","length","method","body","then","response","ok","text","message","sendMessage","undefined","start","setState","stop","console","log","catch","this","unity","on","split","newGame","React","Component","unityContent","UnityContent","App","generateUUID","startIndex","Math","round","random","v4","substring","avaliateProduction","JSON","parse","parseInt","toLowerCase","send","increaseId","doubleClick","changeId","mouseDown","timeout","setTimeout","_","mouseUp","clearTimeout","prompt","localStorage","setItem","alert","getItem","header","Unity","centeredDiv","p","onDoubleClick","onMouseDown","onMouseUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","window","serviceWorker","register","registration","err"],"mappings":"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","file":"static/js/main.6d3024fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RecordButton_button__IZaY8\",\"Red\":\"RecordButton_Red__22ynq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2EZG_\",\"App-logo\":\"App_App-logo__3Yx17\",\"header\":\"App_header__2Wyi5\",\"p\":\"App_p__1TF4B\",\"Unity\":\"App_Unity__1ss9n\",\"centeredDiv\":\"App_centeredDiv__2KJI6\",\"button\":\"App_button__2LSbO\"};","import classes from \"./RecordButton.module.css\";\r\n\r\nconst RecordButton = (props) => {\r\n  let buttonClasses = [classes.button];\r\n  if (props.recording) buttonClasses.push(classes.Red);\r\n  return (\r\n    <button\r\n      onClick={props.recording ? props.stopRecording : props.startRecording}\r\n      className={buttonClasses.join(\" \")}\r\n    >\r\n      <i className=\"material-icons\">{props.recording ? \"mic_off\" : \"mic\"}</i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RecordButton;\r\n","import React from \"react\";\r\nimport RecordButton from \"./Record/RecordButton\";\r\n\r\nconst timeInterval = 3000;\r\n\r\nconst audioConstraints = {\r\n    channelCount: 1,\r\n    sampleRate: 44100,\r\n};\r\n\r\nlet count = 0;\r\n\r\nclass Rec extends React.Component {\r\n    state = {\r\n        recording: false,\r\n        label: \"\",\r\n    };\r\n\r\n    async componentDidMount() {\r\n        navigator.mediaDevices\r\n            .getUserMedia({ audio: audioConstraints })\r\n            .then((stream) => {\r\n                this.mediaRecorder = new MediaRecorder(stream);\r\n                this.mediaRecorder.addEventListener(\"dataavailable\", (event) => {\r\n                    const formData = new FormData();\r\n                    formData.append(\"file\", event.data);\r\n                    console.log(event.data);\r\n                    fetch(\"https://biovisualspeech.eu.pythonanywhere.com/postFileWebm/\", {\r\n                        // fetch(\"http://192.168.1.8:5000/playsound/\", {\r\n                        headers: {\r\n                            name: event.timecode,\r\n                            segment: count,\r\n                            id: this.props.id,\r\n                            label: this.state.label,\r\n                            gameId: this.props.gameId,\r\n                            \"Content-Length\": event.data.length,\r\n                        },\r\n                        method: \"POST\",\r\n                        body: formData,\r\n                    }).then((response) => {\r\n                        if (!response.ok) return;\r\n                        response.text().then((message) => this.props.sendMessage(message));\r\n                    });\r\n                });\r\n            })\r\n            .catch(() => (this.mediaRecorder = undefined));\r\n        this.props.unity.on(\"GameOver\", () => {\r\n            this.stopRecording();\r\n            this.setState({\r\n                label: \"\",\r\n            });\r\n        });\r\n        this.props.unity.on(\"GameStart\", (message) => {\r\n            if (message === \"Menu\") {\r\n                this.stopRecording();\r\n                this.setState({ label: \"\" });\r\n            } else {\r\n                console.log(message);\r\n                const label = message.split(\"_\")[1];\r\n                this.setState({ label: label });\r\n                this.props.newGame();\r\n                this.stopRecording();\r\n            }\r\n        });\r\n    }\r\n\r\n    microphonePermission = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: audioConstraints });\r\n            this.mediaRecorder = new MediaRecorder(stream);\r\n            this.mediaRecorder.addEventListener(\"dataavailable\", (event) => {\r\n                const formData = new FormData();\r\n                formData.append(\"file\", event.data);\r\n                fetch(\"https://biovisualspeech.eu.pythonanywhere.com/postFileWebm/\", {\r\n                    // fetch(\"http://192.168.1.8:5000/playsound/\", {\r\n                    headers: {\r\n                        name: event.timecode,\r\n                        segment: count,\r\n                        id: this.props.id,\r\n                        label: this.state.label,\r\n                        gameId: this.props.gameId,\r\n                        \"Content-Length\": event.data.length,\r\n                    },\r\n                    method: \"POST\",\r\n                    body: formData,\r\n                }).then((response) => {\r\n                    if (!response.ok) return;\r\n                    response.text().then((message) => this.props.sendMessage(message));\r\n                });\r\n            });\r\n        } catch {\r\n            this.mediaRecorder = undefined;\r\n        }\r\n    };\r\n\r\n    startRecording = async () => {\r\n        if (this.mediaRecorder === undefined) await this.microphonePermission();\r\n        if (this.mediaRecorder === undefined) return;\r\n        count = 0;\r\n        this.mediaRecorder.start(timeInterval);\r\n        this.setState({ recording: true });\r\n    };\r\n\r\n    stopRecording = () => {\r\n        if (this.mediaRecorder === undefined || this.mediaRecorder.state !== \"recording\") return;\r\n        this.mediaRecorder.stop();\r\n        this.setState({\r\n            recording: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return this.state.label === \"\" ? null : (\r\n            <RecordButton\r\n                recording={this.state.recording}\r\n                startRecording={this.startRecording}\r\n                stopRecording={this.stopRecording}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rec;\r\n","import classes from \"./App.module.css\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport Recorder from \"./recorder\";\nimport React, { Component } from \"react\";\nimport { v4 } from \"uuid\";\n\nconst unityContent = new UnityContent(\"Build/webgl1/game.json\", \"Build/webgl1/UnityLoader.js\");\n// const unityContent = new UnityContent(\"./Build/webgl1/game.json\", \"./Build/webgl1/UnityLoader.js\");\n\nclass App extends Component {\n    generateUUID = () => {\n        const startIndex = Math.round(Math.random() * 10);\n        const id = v4().substring(startIndex, startIndex + 6);\n        return id;\n    };\n\n    constructor(props) {\n        super(props);\n        let id = localStorage.getItem(\"id\");\n        if (id === null) {\n            id = this.generateUUID();\n            localStorage.setItem(\"id\", id);\n        }\n        this.state = {\n            id: id,\n            gameId: 0,\n        };\n    }\n\n    avaliateProduction = (message) => {\n        const response = JSON.parse(message);\n        if (parseInt(response[\"gameId\"]) !== this.state.gameId) return;\n        if (response[\"response\"].toLowerCase() === \"true\") {\n            console.log(\"characterMoves\");\n            unityContent.send(\"Character\", \"moveCharacter\", \"True\");\n        }\n    };\n\n    increaseId = () => {\n        this.setState({ gameId: this.state.gameId + 1 });\n    };\n\n    doubleClick = () => {\n        const id = this.generateUUID();\n        this.changeId(id);\n    };\n\n    mouseDown = () => {\n        const timeout = setTimeout((_) => this.changeId(), 1000);\n        this.setState({\n            timeout: timeout,\n        });\n    };\n\n    mouseUp = () => {\n        clearTimeout(this.state.timeout);\n    };\n\n    changeId = (id) => {\n        console.log(id);\n        if (!id) {\n            id = prompt(\"Qual é o id?\");\n            if (!id || id.length !== 6) {\n                alert(\"Id Inválido! Tente novamente\");\n                return;\n            }\n        }\n        localStorage.setItem(\"id\", id);\n        this.setState({\n            id: id,\n        });\n    };\n\n    render() {\n        return (\n            <div className={classes.App}>\n                <header className={classes.header}>\n                    <div className={classes.Unity}>\n                        <Unity unityContent={unityContent} />\n                    </div>\n                    <div className={classes.centeredDiv}>\n                        <Recorder\n                            sendMessage={this.avaliateProduction}\n                            id={this.state.id}\n                            unity={unityContent}\n                            gameId={this.state.gameId}\n                            newGame={this.increaseId}\n                        />\n                        <p className={classes.p}>\n                            <button\n                                className={classes.button}\n                                onDoubleClick={this.doubleClick}\n                                onMouseDown={this.mouseDown}\n                                onMouseUp={this.mouseUp}\n                            >\n                                {this.state.id}\n                            </button>\n                        </p>\n                    </div>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { registerServiceWorker } from './serviceWorker'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nregisterServiceWorker();\n","export const registerServiceWorker = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\r\n        // Registration was successful\r\n        //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n      }).catch(function (err) {\r\n        // registration failed :(\r\n        //console.log('ServiceWorker registration failed: ', err);\r\n      });\r\n    });\r\n  }\r\n}"],"sourceRoot":""}