{"version":3,"sources":["Record/RecordButton.module.css","App.module.css","Record/RecordButton.js","recorder.js","App.js","reportWebVitals.js","index.js","serviceWorker.js"],"names":["module","exports","RecordButton","props","buttonClasses","classes","button","recording","push","Red","onClick","stopRecording","startRecording","className","join","audioConstraints","channelCount","sampleRate","count","Rec","state","label","mediaRecorder","start","setState","undefined","stop","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","addEventListener","event","formData","FormData","append","data","fetch","headers","name","timecode","segment","id","gameId","length","method","body","response","ok","text","message","sendMessage","catch","this","unity","on","console","log","split","newGame","React","Component","unityContent","UnityContent","App","generateUUID","startIndex","Math","round","random","v4","substring","avaliateProduction","JSON","parse","parseInt","toLowerCase","send","increaseId","localStorage","getItem","setItem","header","Unity","centeredDiv","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","window","serviceWorker","register","registration","err"],"mappings":"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","file":"static/js/main.4808d2a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RecordButton_button__IZaY8\",\"Red\":\"RecordButton_Red__22ynq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2EZG_\",\"App-logo\":\"App_App-logo__3Yx17\",\"header\":\"App_header__2Wyi5\",\"p\":\"App_p__1TF4B\",\"Unity\":\"App_Unity__1ss9n\",\"centeredDiv\":\"App_centeredDiv__2KJI6\"};","import classes from \"./RecordButton.module.css\";\r\n\r\nconst RecordButton = (props) => {\r\n  let buttonClasses = [classes.button];\r\n  if (props.recording) buttonClasses.push(classes.Red);\r\n  return (\r\n    <button\r\n      onClick={props.recording ? props.stopRecording : props.startRecording}\r\n      className={buttonClasses.join(\" \")}\r\n    >\r\n      <i className=\"material-icons\">{props.recording ? \"mic_off\" : \"mic\"}</i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RecordButton;\r\n","import React from \"react\";\r\nimport RecordButton from \"./Record/RecordButton\";\r\n\r\nconst timeInterval = 900;\r\n\r\nconst audioConstraints = {\r\n    channelCount: 1,\r\n    sampleRate: 44100,\r\n};\r\n\r\nlet count = 0;\r\n\r\nclass Rec extends React.Component {\r\n    state = {\r\n        recording: false,\r\n        label: \"\",\r\n    };\r\n\r\n    async componentDidMount() {\r\n        navigator.mediaDevices\r\n            .getUserMedia({ audio: audioConstraints })\r\n            .then((stream) => {\r\n                this.mediaRecorder = new MediaRecorder(stream);\r\n                this.mediaRecorder.addEventListener(\"dataavailable\", (event) => {\r\n                    const formData = new FormData();\r\n                    formData.append(\"file\", event.data);\r\n                    fetch(\"https://biovisualspeech.eu.pythonanywhere.com/postFileWebm/\", {\r\n                        // fetch(\"http://192.168.1.8:5000/playsound/\", {\r\n                        headers: {\r\n                            name: event.timecode,\r\n                            segment: count,\r\n                            id: this.props.id,\r\n                            label: this.state.label,\r\n                            gameId: this.props.gameId,\r\n                            \"Content-Length\": event.data.length,\r\n                        },\r\n                        method: \"POST\",\r\n                        body: formData,\r\n                    }).then((response) => {\r\n                        if (!response.ok) return;\r\n                        response.text().then((message) => this.props.sendMessage(message));\r\n                    });\r\n                });\r\n            })\r\n            .catch(() => (this.mediaRecorder = undefined));\r\n        this.props.unity.on(\"GameOver\", () => {\r\n            this.stopRecording();\r\n            this.setState({\r\n                label: \"\",\r\n            });\r\n        });\r\n        this.props.unity.on(\"GameStart\", (message) => {\r\n            if (message === \"Menu\") {\r\n                this.stopRecording();\r\n                this.setState({ label: \"\" });\r\n            } else {\r\n                console.log(message);\r\n                const label = message.split(\"_\")[1];\r\n                this.setState({ label: label });\r\n                this.props.newGame();\r\n                this.stopRecording();\r\n            }\r\n        });\r\n    }\r\n\r\n    startRecording = () => {\r\n        count = 0;\r\n        this.mediaRecorder.start(timeInterval);\r\n        this.setState({ recording: true });\r\n    };\r\n\r\n    stopRecording = () => {\r\n        if (this.mediaRecorder === undefined || this.mediaRecorder.state !== \"recording\") return;\r\n        this.mediaRecorder.stop();\r\n        !this.state &&\r\n            this.setState({\r\n                recording: false,\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return this.state.label === \"\" ? null : (\r\n            <RecordButton\r\n                recording={this.state.recording}\r\n                startRecording={this.startRecording}\r\n                stopRecording={this.stopRecording}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rec;\r\n","import classes from \"./App.module.css\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport Recorder from \"./recorder\";\nimport React, { Component } from \"react\";\nimport { v4 } from \"uuid\";\n\nconst unityContent = new UnityContent(\"Build/webgl1/game.json\", \"Build/webgl1/UnityLoader.js\");\n// const unityContent = new UnityContent(\"./Build/webgl1/game.json\", \"./Build/webgl1/UnityLoader.js\");\n\nclass App extends Component {\n    generateUUID = () => {\n        const startIndex = Math.round(Math.random() * 10);\n        const id = v4().substring(startIndex, startIndex + 6);\n        return id;\n    };\n\n    constructor(props) {\n        super(props);\n        let id = localStorage.getItem(\"id\");\n        if (id === null) {\n            id = this.generateUUID();\n            localStorage.setItem(\"id\", id);\n        }\n        this.state = {\n            id: id,\n            gameId: 0,\n        };\n    }\n\n    avaliateProduction = (message) => {\n        const response = JSON.parse(message);\n        if (parseInt(response[\"gameId\"]) !== this.state.gameId) return;\n        if (response[\"response\"].toLowerCase() === \"true\") {\n            console.log(\"characterMoves\");\n            unityContent.send(\"Character\", \"moveCharacter\", \"True\");\n        }\n    };\n\n    onClick = () => {\n        unityContent.send(\"Character\", \"moveCharacter\", \"True\");\n    };\n\n    increaseId = () => {\n        this.setState({ gameId: this.state.gameId + 1 });\n    };\n\n    render() {\n        return (\n            <div className={classes.App}>\n                <header className={classes.header}>\n                    <div className={classes.Unity}>\n                        <Unity unityContent={unityContent} />\n                    </div>\n                    <div className={classes.centeredDiv}>\n                        <Recorder\n                            sendMessage={this.avaliateProduction}\n                            id={this.state.id}\n                            unity={unityContent}\n                            gameId={this.state.gameId}\n                            newGame={this.increaseId}\n                        />\n                        <p className={classes.p}>{this.state.id}</p>\n                    </div>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { registerServiceWorker } from './serviceWorker'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nregisterServiceWorker();\n","export const registerServiceWorker = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\r\n        // Registration was successful\r\n        //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n      }).catch(function (err) {\r\n        // registration failed :(\r\n        //console.log('ServiceWorker registration failed: ', err);\r\n      });\r\n    });\r\n  }\r\n}"],"sourceRoot":""}