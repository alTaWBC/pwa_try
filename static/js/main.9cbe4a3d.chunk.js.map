{"version":3,"sources":["Record/RecordButton.module.css","App.module.css","Record/RecordButton.js","recorder.js","App.js","reportWebVitals.js","index.js","serviceWorker.js"],"names":["module","exports","RecordButton","props","buttonClasses","classes","button","recording","push","Red","onClick","stopRecording","startRecording","className","join","audioConstraints","channelCount","sampleRate","count","Rec","state","label","mediaRecorder","start","setState","stop","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","addEventListener","event","formData","FormData","append","data","fetch","headers","name","timecode","segment","id","gameId","length","method","body","response","ok","text","message","sendMessage","this","unity","on","split","newGame","React","Component","unityContent","UnityContent","App","generateUUID","startIndex","Math","round","random","v4","substring","avaliateProduction","JSON","parse","console","log","toLowerCase","send","increaseId","localStorage","getItem","setItem","header","Unity","centeredDiv","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","window","serviceWorker","register","registration","catch","err"],"mappings":"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","file":"static/js/main.9cbe4a3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RecordButton_button__IZaY8\",\"Red\":\"RecordButton_Red__22ynq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2EZG_\",\"App-logo\":\"App_App-logo__3Yx17\",\"header\":\"App_header__2Wyi5\",\"p\":\"App_p__1TF4B\",\"Unity\":\"App_Unity__1ss9n\",\"centeredDiv\":\"App_centeredDiv__2KJI6\"};","import classes from \"./RecordButton.module.css\";\r\n\r\nconst RecordButton = (props) => {\r\n  let buttonClasses = [classes.button];\r\n  if (props.recording) buttonClasses.push(classes.Red);\r\n  return (\r\n    <button\r\n      onClick={props.recording ? props.stopRecording : props.startRecording}\r\n      className={buttonClasses.join(\" \")}\r\n    >\r\n      <i className=\"material-icons\">{props.recording ? \"mic_off\" : \"mic\"}</i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RecordButton;\r\n","import React from \"react\";\r\nimport RecordButton from \"./Record/RecordButton\";\r\n\r\nconst timeInterval = 250;\r\n\r\nconst audioConstraints = {\r\n  channelCount: 1,\r\n  sampleRate: 44100,\r\n};\r\n\r\nlet count = 0;\r\n\r\nclass Rec extends React.Component {\r\n  state = {\r\n    recording: false,\r\n    label: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ audio: audioConstraints })\r\n      .then((stream) => {\r\n        this.mediaRecorder = new MediaRecorder(stream);\r\n        this.mediaRecorder.addEventListener(\"dataavailable\", (event) => {\r\n          const formData = new FormData();\r\n          formData.append(\"file\", event.data);\r\n          fetch(\"https://biovisualspeech.eu.pythonanywhere.com/postFileWebm/\", {\r\n            headers: {\r\n              name: event.timecode,\r\n              segment: count,\r\n              id: this.props.id,\r\n              label: this.state.label,\r\n              gameId: this.props.gameId,\r\n              \"Content-Length\": event.data.length,\r\n            },\r\n            method: \"POST\",\r\n            body: formData,\r\n          }).then((response) => {\r\n            if (!response.ok) return;\r\n            response.text().then((message) => this.props.sendMessage(message));\r\n          });\r\n        });\r\n      });\r\n    this.props.unity.on(\"GameOver\", () => {\r\n      this.stopRecording();\r\n    });\r\n    this.props.unity.on(\"GameStart\", (message) => {\r\n      if (message === \"Menu\") {\r\n        this.stopRecording();\r\n        this.setState({ label: \"\" });\r\n      } else {\r\n        const label = message.split(\"_\")[1];\r\n        this.setState({ label: label });\r\n        this.props.newGame();\r\n        this.stopRecording();\r\n      }\r\n    });\r\n  }\r\n\r\n  startRecording = () => {\r\n    count = 0;\r\n    this.mediaRecorder.start(timeInterval);\r\n    this.setState({ recording: true });\r\n  };\r\n\r\n  stopRecording = () => {\r\n    if (this.mediaRecorder.state !== \"recording\") return;\r\n    this.mediaRecorder.stop();\r\n    this.setState({\r\n      recording: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.state.label === \"\" ? null : (\r\n      <RecordButton\r\n        recording={this.state.recording}\r\n        startRecording={this.startRecording}\r\n        stopRecording={this.stopRecording}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rec;\r\n","import classes from \"./App.module.css\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport Recorder from \"./recorder\";\nimport React, { Component } from \"react\";\nimport { v4 } from \"uuid\";\n\nconst unityContent = new UnityContent(\n  \"Build/game.json\",\n  \"Build/UnityLoader.js\"\n);\n\nclass App extends Component {\n  generateUUID = () => {\n    const startIndex = Math.round(Math.random() * 10);\n    const id = v4().substring(startIndex, startIndex + 6);\n    return id;\n  };\n\n  constructor(props) {\n    super(props);\n    let id = localStorage.getItem(\"id\");\n    if (id === null) {\n      id = this.generateUUID();\n      localStorage.setItem(\"id\", id);\n    }\n    this.state = {\n      id: id,\n      gameId: 0,\n    };\n  }\n\n  avaliateProduction = (message) => {\n    const response = JSON.parse(message);\n    console.log(response[\"gameId\"]);\n    console.log(response[\"response\"]);\n    console.log(response.response);\n    console.log(response.gameId);\n    console.log(response[\"gameId\"] !== this.state.gameId);\n    console.log(response[\"response\"].toLowerCase() === \"true\");\n    if (response[\"gameId\"] !== this.state.gameId) return;\n    if (response[\"response\"].toLowerCase() === \"true\") {\n      console.log(\"characterMoves\");\n      unityContent.send(\"Character\", \"moveCharacter\", \"True\");\n    }\n  };\n\n  onClick = () => {\n    unityContent.send(\"Character\", \"moveCharacter\", \"True\");\n  };\n\n  increaseId = () => {\n    this.setState({ gameId: this.state.gameId + 1 });\n  };\n\n  render() {\n    return (\n      <div className={classes.App}>\n        <header className={classes.header}>\n          <div className={classes.Unity}>\n            <Unity unityContent={unityContent} />\n          </div>\n          <div className={classes.centeredDiv}>\n            <Recorder\n              sendMessage={this.avaliateProduction}\n              id={this.state.id}\n              unity={unityContent}\n              gameId={this.state.gameId}\n              newGame={this.increaseId}\n            />\n            <p className={classes.p}>{this.state.id}</p>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { registerServiceWorker } from './serviceWorker'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nregisterServiceWorker();\n","export const registerServiceWorker = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\r\n        // Registration was successful\r\n        //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n      }).catch(function (err) {\r\n        // registration failed :(\r\n        //console.log('ServiceWorker registration failed: ', err);\r\n      });\r\n    });\r\n  }\r\n}"],"sourceRoot":""}