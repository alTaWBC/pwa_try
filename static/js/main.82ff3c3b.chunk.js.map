{"version":3,"sources":["Record/RecordButton.module.css","Record/RecordButton.js","recorder.js","App.js","reportWebVitals.js","index.js","serviceWorker.js","App.module.css"],"names":["module","exports","RecordButton","props","buttonClasses","classes","button","recording","push","Red","onClick","stopRecording","startRecording","className","join","SERVER_URL","date","Date","count","Rec","state","label","chunks","audios","prepareUnityCommunication","unity","on","changeLabel","message","split","newGame","setState","prepareMicrophone","a","navigator","mediaDevices","getUserMedia","audio","stream","mediaRecorder","MediaRecorder","isApple","window","platform","includes","addEventListener","onDataAvailableSafari","onDataAvailable","onStop","undefined","data","timecode","url","alert","size","sendDataToServer","response","ok","text","then","sendMessage","getTime","blob","Blob","type","URL","createObjectURL","Audio","location","formData","FormData","append","fetch","headers","name","segment","id","gameId","length","method","body","start","MicrophonePermissionsWereNotGiven","MicrophoneIsNotRecording","stop","playAudio","index","sounds","play","createAudios","map","_","this","React","Component","unityContent","UnityContent","App","generateUUID","startIndex","Math","round","random","v4","substring","avaliateProduction","JSON","parse","parseInt","toLowerCase","console","log","send","increaseId","doubleClick","changeId","mouseDown","timeout","setTimeout","mouseUp","clearTimeout","prompt","localStorage","setItem","getItem","header","Unity","centeredDiv","p","onDoubleClick","onMouseDown","onMouseUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","serviceWorker","register","registration","catch","err"],"mappings":"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","file":"static/js/main.82ff3c3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"RecordButton_button__IZaY8\",\"Red\":\"RecordButton_Red__22ynq\"};","import classes from \"./RecordButton.module.css\";\r\n\r\nconst RecordButton = (props) => {\r\n  let buttonClasses = [classes.button];\r\n  if (props.recording) buttonClasses.push(classes.Red);\r\n  return (\r\n    <button\r\n      onClick={props.recording ? props.stopRecording : props.startRecording}\r\n      className={buttonClasses.join(\" \")}\r\n    >\r\n      <i className=\"material-icons\">{props.recording ? \"mic_off\" : \"mic\"}</i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default RecordButton;\r\n","import React from \"react\";\r\nimport RecordButton from \"./Record/RecordButton\";\r\n\r\n// Time between calls to {this.onDataAvailable}\r\nconst timeInterval = 3000;\r\n\r\n// Segment number\r\n\r\nconst SERVER_URL = \"https://biovisualspeech.eu.pythonanywhere.com\";\r\n\r\n// Used for debug purposes\r\n// eslint-disable-next-line no-unused-vars\r\nconst DEBUG_URL = \"http://192.168.1.8:5000/playsound/\";\r\nconst date = new Date();\r\n\r\nlet count = 0;\r\n\r\nclass Rec extends React.Component {\r\n    state = {\r\n        recording: false,\r\n        label: \"l\",\r\n        chunks: [],\r\n        audios: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.prepareMicrophone();\r\n        this.prepareUnityCommunication();\r\n    }\r\n\r\n    prepareUnityCommunication = () => {\r\n        this.props.unity.on(\"GameOver\", () => {\r\n            this.stopRecording();\r\n            this.changeLabel();\r\n        });\r\n        this.props.unity.on(\"GameStart\", (message) => {\r\n            this.stopRecording();\r\n\r\n            // Message can be 'Game_{Label}' or 'Menu'\r\n            // In the former Label will be {Label}\r\n            // In the latter Label will be {undefined}\r\n            // this.changeLabel({label}) uses label === '' in undefined scenarios\r\n            this.changeLabel(message.split(\"_\")[1]);\r\n\r\n            const newGame = message !== \"Menu\";\r\n            if (newGame) this.props.newGame();\r\n        });\r\n    };\r\n\r\n    changeLabel = (label = \"\") => {\r\n        this.setState({ label });\r\n    };\r\n\r\n    prepareMicrophone = async () => {\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            this.mediaRecorder = new MediaRecorder(stream);\r\n            const isApple =\r\n                window.navigator.platform.includes(\"iPhone\") ||\r\n                window.navigator.platform.includes(\"Mac\") ||\r\n                window.navigator.platform.includes(\"iPad\");\r\n            this.mediaRecorder.addEventListener(\r\n                \"dataavailable\",\r\n                isApple ? this.onDataAvailableSafari : this.onDataAvailable\r\n            );\r\n            isApple && this.mediaRecorder.addEventListener(\"stop\", this.onStop);\r\n        } catch {\r\n            this.mediaRecorder = undefined;\r\n        }\r\n    };\r\n\r\n    onDataAvailable = async ({ data, timecode }, url = undefined) => {\r\n        alert(data.size);\r\n        const response = await this.sendDataToServer(data, timecode, url);\r\n        if (!response.ok) return;\r\n        response.text().then((message) => this.props.sendMessage(message));\r\n    };\r\n\r\n    // Safari handles recording sound in a different light\r\n    // So we need special care\r\n    onDataAvailableSafari = ({ data, timecode = date.getTime() }) => {\r\n        // const blob = new Blob([data], { type: \"audio/mp4\" });\r\n        // const url = URL.createObjectURL(blob);\r\n        // const audio = new Audio(url);\r\n        // audio.play();\r\n        // this.onDataAvailable({ data: blob, timecode: timecode }, \"postFileMp4/\");\r\n        const chunks = [...this.state.chunks, data];\r\n        this.setState({ chunks });\r\n    };\r\n\r\n    onStop = ( { data, timecode = date.getTime() } ) => {\r\n        const chunks = [...this.state.chunks, data];\r\n        const blob = new Blob(chunks, { type: \"audio/mp4\" });\r\n        const url = URL.createObjectURL(blob);\r\n        const audio = new Audio(url);\r\n        // setTimeout(() => {\r\n        //     audio.play();\r\n        //     alert(\"Timeout\");\r\n        // }, 1000);\r\n        // this.sendDataToServer(data, timecode, \"postFileMp4/\");\r\n        const audios = [...this.state.audios, audio];\r\n        this.setState({ chunks: [], audios });\r\n    };\r\n\r\n    sendDataToServer = async (data, timecode, location = \"postFileWebm/\") => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", data);\r\n        return fetch(`${SERVER_URL}/${location}`, {\r\n            headers: {\r\n                name: timecode,\r\n                segment: count,\r\n                id: this.props.id,\r\n                label: this.state.label,\r\n                gameId: this.props.gameId,\r\n                \"Content-Length\": data.length,\r\n            },\r\n            method: \"POST\",\r\n            body: formData,\r\n        });\r\n    };\r\n\r\n    startRecording = async () => {\r\n        const MicrophonePermissionsWereNotGiven = this.mediaRecorder === undefined;\r\n        if (MicrophonePermissionsWereNotGiven) return;\r\n        this.mediaRecorder.start(timeInterval);\r\n        count = 0;\r\n        this.setState({ recording: true });\r\n    };\r\n\r\n    stopRecording = () => {\r\n        const MicrophonePermissionsWereNotGiven = this.mediaRecorder === undefined;\r\n        const MicrophoneIsNotRecording = !this.state.recording;\r\n        if (MicrophonePermissionsWereNotGiven || MicrophoneIsNotRecording) return;\r\n        this.mediaRecorder.stop();\r\n        this.setState({ recording: false });\r\n    };\r\n\r\n    playAudio = (index) => {\r\n        this.state.sounds[index].play();\r\n    };\r\n\r\n    createAudios = (audios) => {\r\n        return audios.map((_, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <button onClick={() => this.playAudio(index)}>{index}</button>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const audios = this.createAudios(this.state.audios);\r\n        return this.state.label === \"\" ? null : (\r\n            <div>\r\n                <RecordButton\r\n                    recording={this.state.recording}\r\n                    startRecording={this.startRecording}\r\n                    stopRecording={this.stopRecording}\r\n                />\r\n                {audios}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rec;\r\n","import classes from \"./App.module.css\";\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport Recorder from \"./recorder\";\nimport React, { Component } from \"react\";\nimport { v4 } from \"uuid\";\n\nconst unityContent = new UnityContent(\"Build/webgl1/game.json\", \"Build/webgl1/UnityLoader.js\");\n// const unityContent = new UnityContent(\"./Build/webgl1/game.json\", \"./Build/webgl1/UnityLoader.js\");\n\nclass App extends Component {\n    generateUUID = () => {\n        const startIndex = Math.round(Math.random() * 10);\n        const id = v4().substring(startIndex, startIndex + 6);\n        return id;\n    };\n\n    constructor(props) {\n        super(props);\n        let id = localStorage.getItem(\"id\");\n        if (id === null) {\n            id = this.generateUUID();\n            localStorage.setItem(\"id\", id);\n        }\n        this.state = {\n            id: id,\n            gameId: 0,\n        };\n    }\n\n    avaliateProduction = (message) => {\n        const response = JSON.parse(message);\n        if (parseInt(response[\"gameId\"]) !== this.state.gameId) return;\n        if (response[\"response\"].toLowerCase() === \"true\") {\n            console.log(\"characterMoves\");\n            unityContent.send(\"Character\", \"moveCharacter\", \"True\");\n        }\n    };\n\n    increaseId = () => {\n        this.setState({ gameId: this.state.gameId + 1 });\n    };\n\n    doubleClick = () => {\n        const id = this.generateUUID();\n        this.changeId(id);\n    };\n\n    mouseDown = () => {\n        const timeout = setTimeout((_) => this.changeId(), 1000);\n        this.setState({\n            timeout: timeout,\n        });\n    };\n\n    mouseUp = () => {\n        clearTimeout(this.state.timeout);\n    };\n\n    changeId = (id) => {\n        console.log(id);\n        if (!id) {\n            id = prompt(\"Qual é o id?\");\n            if (!id || id.length !== 6) {\n                alert(\"Id Inválido! Tente novamente\");\n                return;\n            }\n        }\n        localStorage.setItem(\"id\", id);\n        this.setState({\n            id: id,\n        });\n    };\n\n    render() {\n        return (\n            <div className={classes.App}>\n                <header className={classes.header}>\n                    <div className={classes.Unity}>\n                        <Unity unityContent={unityContent} />\n                    </div>\n                    <div className={classes.centeredDiv}>\n                        <Recorder\n                            sendMessage={this.avaliateProduction}\n                            id={this.state.id}\n                            unity={unityContent}\n                            gameId={this.state.gameId}\n                            newGame={this.increaseId}\n                        />\n                        <p className={classes.p}>\n                            <button\n                                className={classes.button}\n                                onDoubleClick={this.doubleClick}\n                                onMouseDown={this.mouseDown}\n                                onMouseUp={this.mouseUp}\n                            >\n                                {this.state.id}\n                            </button>\n                        </p>\n                    </div>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { registerServiceWorker } from './serviceWorker'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nregisterServiceWorker();\n","export const registerServiceWorker = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', function () {\r\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\r\n        // Registration was successful\r\n        //console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n      }).catch(function (err) {\r\n        // registration failed :(\r\n        //console.log('ServiceWorker registration failed: ', err);\r\n      });\r\n    });\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2EZG_\",\"App-logo\":\"App_App-logo__3Yx17\",\"header\":\"App_header__2Wyi5\",\"p\":\"App_p__1TF4B\",\"Unity\":\"App_Unity__1ss9n\",\"centeredDiv\":\"App_centeredDiv__2KJI6\",\"button\":\"App_button__2LSbO\"};"],"sourceRoot":""}